@using BlogApp.Entity
@model Post

<div class="container py-5">
    <article class="blog-post">
        <!-- Başlık Alanı -->
        <div class="post-header text-center mb-4">
            <h1 class="post-title">@Model.Title</h1>
            <div class="post-meta">
                <span><i class="far fa-calendar"></i> @Model.PublishedOn.ToString("dd.MM.yyyy HH:mm")</span>
            </div>
        </div>

        <!-- Resim Alanı (Merkeze Hizalı) -->
        <div class="text-center mb-5">
            <img src="~/img/post/@Model.Image" class="post-featured-image img-fluid" alt="@Model.Title">
        </div>

        <!-- İçerik Alanı -->
        <div class="post-content">
            @Html.Raw(Model.Content)
        </div>

        <!-- Etiketler -->
        <div class="post-tags mt-5 text-center">
            @foreach (var tag in Model.Tags)
            {
                <a href="/Post/Index?tag=@tag.Url" class="post-tag">@tag.Text</a>
            }
        </div>
    </article>

    <!-- Yazar Bilgileri -->
    <div class="author-info mb-5" style="max-width: 800px; margin: 0 auto;">
        <h3 class="mb-3" style="font-weight: 600; padding-bottom: 15px; border-bottom: 1px solid var(--dark-tertiary);">Yazar</h3>
        <div class="d-flex align-items-center gap-3 p-4 rounded" style="background-color: var(--dark-tertiary);">
            <a href="/Profile/@Model.User.UserName" class="text-decoration-none">
                <img src="~/img/users/@(Model.User.Image ?? "default.jpg")" 
                     class="rounded-circle" 
                     style="width: 80px; height: 80px; object-fit: cover;" 
                     alt="@Model.User.UserName">
            </a>
            <div>
                <a href="/Profile/@Model.User.UserName" class="text-decoration-none">
                    <h5 class="mb-1 text-white">@Model.User.Name</h5>
                </a>
                <p class="mb-0 text-secondary">@Model.User.UserName</p>
            </div>
        </div>
    </div>

    <!-- Yorumlar Bölümü -->
    <div class="comments-section mt-5">
        <h3 class="mb-4">Yorumlar <span id="commentCount">@Model.Comments.Count</span></h3>

        <!-- Yorum Formu -->
        @if (User.Identity!.IsAuthenticated)
        {
            <form id="commentForm" class="comment-form mb-4">
                <input type="hidden" id="PostId" value="@Model.PostId" />
                <div class="mb-3">
                    <textarea class="form-control" id="Text" rows="3" placeholder="Yorumunuzu yazın... (Maksimum 300 karakter)" maxlength="300"></textarea>
                    <small class="text-muted float-end"><span id="charCount">0</span>/300</small>
                </div>
                <button type="button" id="btnYorumKayit" class="btn btn-primary">Yorum Yap</button>
            </form>
        }
        else
        {
            <div class="alert alert-info">
                Yorum yapabilmek için <a href="/User/Login">giriş yapın</a>.
            </div>
        }

        <!-- Yorumlar Listesi -->
        <div id="comments">
            @foreach (var comment in Model.Comments.OrderByDescending(c => c.PublishedOn).Take(5))
            {
                <div class="comment">
                    <img src="~/img/users/@(comment.User?.Image ?? "default.jpg")" class="comment-avatar" alt="@comment.User?.UserName">
                    <div class="comment-body">
                        <div class="comment-header">
                            <span class="comment-name">@comment.User?.UserName</span>
                            <span class="comment-date">@comment.PublishedOn.ToString("dd.MM.yyyy")</span>
                        </div>
                        <p class="comment-text">@comment.Text</p>
                    </div>
                </div>
            }
        </div>

        <!-- Sayfalama -->
        <div id="pagination" class="mt-4 text-center">
            <nav aria-label="Yorum sayfaları">
                <ul class="pagination justify-content-center">
                    <li class="page-item disabled" id="prevPage">
                        <a class="page-link" href="#" tabindex="-1">Önceki</a>
                    </li>
                    <li class="page-item active"><a class="page-link" href="#" data-page="1">1</a></li>
                    <li class="page-item" id="nextPage">
                        <a class="page-link" href="#">Sonraki</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script type="text/javascript">
        var currentPage = 1;
        var totalPages = @Math.Ceiling(Model.Comments.Count / 5.0);

        $(document).ready(function () {
            // Karakter sayacı
            $('#Text').on('input', function() {
                var currentLength = $(this).val().length;
                $('#charCount').text(currentLength);
                
                // Karakter limiti aşıldığında uyarı göster
                if (currentLength > 300) {
                    $('#charCount').addClass('text-danger');
                } else {
                    $('#charCount').removeClass('text-danger');
                }
            });

            // Sayfalama kontrollerini güncelle
            updatePagination();

            // Sayfa değişikliği
            $(document).on('click', '.page-link', function(e) {
                e.preventDefault();
                var page = $(this).data('page');
                if (page) {
                    loadComments(page);
                }
            });

            // Yorum ekleme
            $("#btnYorumKayit").click(function () {
                var text = $("#Text").val().trim();
                if (!text) {
                    alert("Lütfen bir yorum yazın.");
                    return false;
                }

                if (text.length > 300) {
                    alert("Yorumunuz 300 karakterden uzun olamaz.");
                    return false;
                }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddComment", "Comment")',
                    dataType: 'json',
                    data: {
                        PostId: $('#PostId').val(),
                        Text: text
                    },
                    success: function (response) {
                        if (response.success) {
                            var comment = response.comment;
                            var date = new Date(comment.publishedOn);
                            var avatarPath = comment.avatar ? `/img/users/${comment.avatar}` : '/img/users/default.jpg';

                            $("#comments").prepend(`
                                <div class="comment">
                                    <img src="${avatarPath}" class="comment-avatar" alt="${comment.username}">
                                    <div class="comment-body">
                                        <div class="comment-header">
                                            <span class="comment-name">${comment.username}</span>
                                            <span class="comment-date">${date.toLocaleDateString()}</span>
                                        </div>
                                        <p class="comment-text">${comment.text}</p>
                                    </div>
                                </div>
                            `);

                            $("#Text").val('');
                            $('#charCount').text('0');
                            var adet = parseInt($("#commentCount").text());
                            $("#commentCount").text(adet + 1);
                            
                            // Yeni yorum eklendiğinde sayfa sayısını güncelle
                            totalPages = Math.ceil((adet + 1) / 5);
                            updatePagination();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert("Yorum eklenirken bir hata oluştu: " + error);
                    }
                });
                return false;
            });
        });

        function loadComments(page) {
            currentPage = page;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetComments", "Comment")',
                data: {
                    postId: $('#PostId').val(),
                    page: page,
                    pageSize: 5
                },
                success: function(response) {
                    $("#comments").empty();
                    response.comments.forEach(function(comment) {
                        var date = new Date(comment.publishedOn);
                        var avatarPath = comment.avatar ? `/img/users/${comment.avatar}` : '/img/users/default.jpg';
                        
                        $("#comments").append(`
                            <div class="comment">
                                <img src="${avatarPath}" class="comment-avatar" alt="${comment.username}">
                                <div class="comment-body">
                                    <div class="comment-header">
                                        <span class="comment-name">${comment.username}</span>
                                        <span class="comment-date">${date.toLocaleDateString()}</span>
                                    </div>
                                    <p class="comment-text">${comment.text}</p>
                                </div>
                            </div>
                        `);
                    });

                    totalPages = response.totalPages;
                    updatePagination();
                },
                error: function(xhr, status, error) {
                    alert("Yorumlar yüklenirken bir hata oluştu: " + error);
                }
            });
        }

        function updatePagination() {
            var paginationHtml = '';
            
            // Önceki sayfa butonu (sadece ilk sayfada değilken göster)
            if (currentPage > 1) {
                paginationHtml += `
                    <li class="page-item">
                        <a class="page-link" href="#" data-page="${currentPage - 1}">Önceki</a>
                    </li>
                `;
            }

            // Sayfa numaraları
            for (var i = 1; i <= totalPages; i++) {
                paginationHtml += `
                    <li class="page-item ${currentPage === i ? 'active' : ''}">
                        <a class="page-link" href="#" data-page="${i}">${i}</a>
                    </li>
                `;
            }

            // Sonraki sayfa butonu (sadece son sayfada değilken göster)
            if (currentPage < totalPages) {
                paginationHtml += `
                    <li class="page-item">
                        <a class="page-link" href="#" data-page="${currentPage + 1}">Sonraki</a>
                    </li>
                `;
            }

            $(".pagination").html(paginationHtml);
        }
    </script>
}

@section Styles {
    <link rel="stylesheet" href="~/css/style.css" />
    <style>
        /* Blog post özel stilleri */
        .blog-post {
            max-width: 800px;
            margin: 0 auto 60px;
            padding-bottom: .0px;
            border-bottom: 1px solid var(--dark-tertiary);
        }

        .post-header {
            margin-bottom: 30px;
        }

        .post-title {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 15px;
        }

        .post-featured-image {
            max-height: 500px;
            border-radius: 8px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }

        .comments-section {
            max-width: 800px;
            margin: 0 auto;
        }

        /* Mevcut dark temanın yorumlar ve diğer öğeleri doğru şekilde görüntülemesi için */
        .comments-section h3 {
            font-weight: 600;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--dark-tertiary);
        }

        /* Yorum stilleri */
        .comment {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            background: var(--dark-tertiary);
            padding: 15px;
            border-radius: 8px;
        }

        .comment-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
        }

        .comment-body {
            flex: 1;
            min-width: 0; /* Flexbox içinde taşmayı önler */
        }

        .comment-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
        }

        .comment-name {
            font-weight: 600;
            color: var(--text-primary);
        }

        .comment-date {
            font-size: 0.9rem;
            color: var(--text-secondary);
        }

        .comment-text {
            margin: 0;
            word-wrap: break-word;
            overflow-wrap: break-word;
            white-space: pre-wrap;
            max-width: 100%;
            line-height: 1.5;
        }

        /* Yorum form stilleri */
        .comment-form textarea {
            background-color: var(--dark-tertiary);
            border: 1px solid var(--dark-secondary);
            color: var(--text-primary);
            resize: vertical;
        }

        .comment-form textarea:focus {
            background-color: var(--dark-tertiary);
            border-color: var(--accent);
            box-shadow: 0 0 0 0.2rem rgba(var(--accent-rgb), 0.25);
            color: var(--text-primary);
        }

        /* Sayfalama stilleri */
        .pagination {
            margin-top: 20px;
        }

        .page-link {
            background-color: var(--dark-tertiary);
            border-color: var(--dark-secondary);
            color: var(--text-primary);
        }

        .page-link:hover {
            background-color: var(--dark-secondary);
            border-color: var(--dark-secondary);
            color: var(--text-primary);
        }

        .page-item.active .page-link {
            background-color: var(--accent);
            border-color: var(--accent);
        }

        .page-item.disabled .page-link {
            background-color: var(--dark-tertiary);
            border-color: var(--dark-secondary);
            color: var(--text-secondary);
        }

        /* Karakter sayacı stilleri */
        .text-muted {
            font-size: 0.875rem;
        }

        .text-danger {
            font-weight: bold;
        }
    </style>
}